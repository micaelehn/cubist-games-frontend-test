@import "./animations.scss";
@import "./markdown-editor.scss";
@import "./games-table.scss";

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  &:focus {
    outline: none;
  }
}

html,
body {
  height: 100%;
  padding: 0;
  margin: 0;
  font-family: var(--fontFamily);
  font-size: var(--fontSizeMedium);
  background-image: var(--bodyImage);
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  color: var(--color0);
  caret-color: var(--inputColor0);
}
#__next {
  min-height: 100%;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns: 100%;
}
main {
  height: 100%;
  grid-row: 1/3;
}
h1,
h2,
h3,
h4,
h5,
h6,
button {
  font-family: var(--fontFamily2);
  text-shadow: var(--titlesShadow);
}
h1 {
  font-size: var(--h1Size);
  margin: 0 0 25px 0;
}
h2 {
  font-size: var(--h2Size);
  margin: 0 0 25px 0;
}
h3 {
  font-size: var(--h3Size);
  margin: 0 0 7px 0;
}
h4 {
  font-size: var(--h4Size);
  margin: 0 0 15px 0;
}
ul {
  list-style: none;
}
ol,
ul {
  padding: 0;
  margin: 0;
  list-style-position: inside;
}
.sqList {
  li {
    position: relative;
    padding: 0 0 5px 25px;
    &::before {
      content: "";
      position: absolute;
      top: 6px;
      left: 10px;
      width: 4px;
      height: 4px;
      background-color: var(--color2);
    }
    &:last-of-type {
      margin-bottom: 15px;
    }
  }
}
p {
  margin: 0 0 15px 0;
}
a {
  color: inherit;
  text-decoration: none;
}

.vhAligned {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.vAligned {
  display: flex;
  gap: 12px;
  align-items: center;
}
.centered {
  justify-content: center;
}
.separated {
  justify-content: space-between;
}
.textCenter {
  text-align: center;
}
.jCSB {
  justify-content: space-between;
}
.gap0 {
  gap: 0;
}
.gap5 {
  gap: 5px;
}

input,
textarea {
  padding: 12px 40px 12px 16px;
  background-color: var(--inputBg0);
  color: var(--inputColor0);
  border: 1px solid var(--inputBorder0);
  border-radius: 2px;
  &::-webkit-calendar-picker-indicator {
    filter: invert(100%);
    cursor: pointer;
  }
}
/* Hide arrow number: Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
/* Hide arrow number: Firefox */
input[type="number"] {
  -moz-appearance: textfield;
}
input:focus,
select:focus,
textarea:focus,
button:focus {
  outline: none;
}
label {
  cursor: pointer;
}
.overlap {
  position: relative;
  display: inline-block;

  > span {
    position: absolute;
    top: -8px;
    left: 8px;
    padding: 0px 4px;
    font-size: var(--fontSizeSmall);
    background: var(--boxBg0);
    border: 1px solid var(--inputBorder0);
  }
  > svg,
  em {
    position: absolute;
    top: 50%;
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%);
    right: 15px;
  }
  > input {
    position: relative;
  }
  > button {
    position: absolute;
    top: calc(50% - 10px);
    right: 15px;
  }
}
svg {
  cursor: pointer;
}

.icon0,
.icon1,
.icon2,
.icon3 {
  cursor: pointer;
  -webkit-transition: color 1s ease-out;
  -moz-transition: color 1s ease-out;
  -o-transition: color 1s ease-out;
  transition: color 1s ease-out;
  path {
    -webkit-transition: fill 1s ease-out;
    -moz-transition: fill 1s ease-out;
    -o-transition: fill 1s ease-out;
    transition: fill 1s ease-out;
  }
}
.icon0 {
  color: var(--iconFill0);
  path {
    fill: var(--iconFill0);
  }
  &:hover {
    color: var(--iconFill1);
    path {
      fill: var(--iconFill1);
    }
  }
}
.icon1 {
  color: var(--iconFill1);
  path {
    fill: var(--iconFill1);
  }
  &:hover {
    color: var(--iconFill0);
    path {
      fill: var(--iconFill0);
    }
  }
}
.icon2 {
  color: var(--iconFill2);
  path {
    fill: var(--iconFill2);
  }
  &:hover {
    color: var(--iconFill0);
    path {
      fill: var(--iconFill0);
    }
  }
}
.icon3 {
  color: var(--iconFill3);
  path {
    fill: var(--iconFill3);
  }
  &:hover {
    color: var(--iconFill0);
    path {
      fill: var(--iconFill0);
    }
  }
}

button {
  // Medium Button
  padding: 12px 24px;
  -webkit-transition: background-color 1s ease-out;
  -moz-transition: background-color 1s ease-out;
  -o-transition: background-color 1s ease-out;
  transition: background-color 1s ease-out;
  color: var(--color0);
  background-color: var(--btnBg0);

  &.sm {
    padding: 4px 16px;
    font-size: var(--fontSizeXS);
  }
  &.big {
    padding: 20px 24px;
  }
  &.rounded {
    border-radius: 50px;
  }
  &[disabled] {
    background-color: var(--disabledBtnBg);
    color: var(--color13);
    &:hover {
      background-color: var(--disabledBtnHoverBg);
    }
  }
  &:hover {
    background-color: var(--btnBgHover0);
  }
}

button.pulsar0 {
  animation: radial-pulse0 1.5s ease infinite;
  -moz-animation: radial-pulse0 1.5s ease infinite;
  -webkit-animation: radial-pulse0 1.5s ease infinite;
}

.button1 {
  background-color: var(--btnBg1);
  &:hover {
    background-color: var(--btnBgHover1);
  }
}
.button2 {
  background-color: var(--btnBg2);
  &:hover {
    background-color: var(--btnBgHover2);
  }
}
.button3 {
  background-color: var(--btnBg3);
  &:hover {
    background-color: var(--btnBgHover3);
  }
}
button.btnRadius2 {
  border-radius: var(--btnRadius2);
}
.errorMsg {
  padding: 10px 20px;
  background-color: var(--errorBg);
  border-radius: 3px;
}

.fullCol {
  flex: 1;
}

.flex {
  display: flex;
}
.fEnd {
  justify-content: flex-end;
}
.fullWidth {
  width: 100%;
}
.mb-med {
  margin-bottom: 15px;
}
.mb-big {
  margin-bottom: 30px;
}

.circleBg,
.circleBorder {
  display: flex;
  padding: 3px;
  border-radius: 50%;
}
.circleBg {
  background-color: var(--color1);
}
.circleBorder {
  border-width: 1px;
  border-style: solid;
}
.link {
  text-decoration: underline;
  &:hover {
    text-decoration: none;
  }
}

// Generate option colors
@for $i from 0 through 25 {
  .optBg#{$i} {
    background-color: var(--opt#{$i});
  }
  .optColor#{$i} {
    color: var(--opt#{$i});
  }
}

.voidBg {
  background-color: var(--color0);
}
.colorVoid {
  color: var(--color0);
}

.gameFooter {
  padding-bottom: 100px !important;
}

/* Modal Styles */
.ReactModal__Overlay {
  opacity: 0;
  transition: opacity 300ms ease-in-out;
}

.ReactModal__Overlay--after-open {
  opacity: 1;
}

.ReactModal__Overlay--before-close {
  opacity: 0;
}

@media (max-width: 768px) {
  .mWrap {
    flex-flow: wrap;
  }
  .mobileCol {
    align-items: baseline;
    flex-direction: column;
  }
  .hiddenMobile {
    display: none;
  }
  .fullCol {
    flex: unset;
    width: 100%;
  }
  .gameFooter {
    padding-bottom: 120px !important;
  }
}
